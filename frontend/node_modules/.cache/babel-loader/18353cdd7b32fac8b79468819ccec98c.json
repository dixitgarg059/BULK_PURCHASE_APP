{"ast":null,"code":"import _classCallCheck from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-order-product.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nvar ref;\n\nvar ORDER_PRODUCT =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ORDER_PRODUCT, _Component);\n\n  function ORDER_PRODUCT(props) {\n    var _this;\n\n    _classCallCheck(this, ORDER_PRODUCT);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ORDER_PRODUCT).call(this, props));\n    ref = _assertThisInitialized(_assertThisInitialized(_this));\n    ref.state = {\n      customername: ref.props.location.customername,\n      vendorname: ref.props.location.vendorname,\n      productname: ref.props.location.productname,\n      quantity: 0\n    };\n    ref.onChangeQuantity = ref.onChangeQuantity.bind(ref);\n    return _this;\n  }\n\n  _createClass(ORDER_PRODUCT, [{\n    key: \"onChangeQuantity\",\n    value: function onChangeQuantity(event) {\n      // alert(ref);\n      ref.setState({\n        quantity: event.target.value\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var Product = {\n        customername: ref.state.customername,\n        vendorname: ref.state.vendorname,\n        productname: ref.state.productname,\n        quantity: ref.state.quantity,\n        status: \"WAITING\"\n      };\n      alert(\"adding to database\");\n      alert(ref.state.customername);\n      axios.post('http://localhost:4000/add_order', Product).then(function (res) {\n        return console.log(res.data);\n      }); // // axios.put('http://localhost:4000/updateorder',Product)\n\n      ref.setState({\n        quantity: 0\n      });\n      var Pr = {\n        username: ref.state.vendorname,\n        productname: ref.state.productname\n      };\n      axios.post('https://localhost:4000/check1', Pr).then(function (response) {\n        quant = response.data.quantity;\n        cnt = response.data.count;\n        new_cnt = cnt + _this2.state.quantity;\n\n        if (new_cnt === quant) {} else if (new_cnt > quant) {} else {} // this.setState({users: response.data.});\n\n      }).catch(function (error) {\n        console.log(error);\n      });\n      alert(\"Ordering done!\\n\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: ref.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Quantity: \"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: ref.state.quantity,\n        onChange: ref.onChangeQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Order1\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ORDER_PRODUCT;\n}(Component);\n\nexport { ORDER_PRODUCT as default };","map":{"version":3,"sources":["/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-order-product.component.js"],"names":["React","Component","axios","ref","ORDER_PRODUCT","props","state","customername","location","vendorname","productname","quantity","onChangeQuantity","bind","event","setState","target","value","e","preventDefault","Product","status","alert","post","then","res","console","log","data","Pr","username","response","quant","cnt","count","new_cnt","catch","error","onSubmit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nlet ref;\nexport default class ORDER_PRODUCT extends Component {\n    \n    constructor(props) {\n        super(props);\n        ref=this;\n        ref.state = {\n            customername:ref.props.location.customername,\n            vendorname:ref.props.location.vendorname,\n            productname:ref.props.location.productname,\n            quantity:0\n        };\n        ref.onChangeQuantity = ref.onChangeQuantity.bind(ref);\n    \n\n    }\n    \n    onChangeQuantity(event) {\n        // alert(ref);\n        ref.setState({ quantity: event.target.value });\n    }\n    onSubmit(e) {\n        e.preventDefault();\n\n        const Product={\n            customername:ref.state.customername,\n            vendorname:ref.state.vendorname,\n            productname:ref.state.productname,\n            quantity:ref.state.quantity,\n            status:\"WAITING\"\n        }\n        alert(\"adding to database\");\n        alert(ref.state.customername);\n        axios.post('http://localhost:4000/add_order', Product)\n            .then(res => console.log(res.data));\n\n        // // axios.put('http://localhost:4000/updateorder',Product)\n        ref.setState({\n            quantity:0\n        });\n        const Pr={\n            username:ref.state.vendorname,\n            productname:ref.state.productname\n        }\n        axios.post('https://localhost:4000/check1',Pr)\n            .then(response => {\n                quant=response.data.quantity;\n                cnt=response.data.count;\n                new_cnt=cnt+this.state.quantity;\n                if(new_cnt === quant)\n                {   \n                    \n\n                }\n                else if(new_cnt > quant)\n                {\n\n                }\n                else\n                {\n\n                }\n                // this.setState({users: response.data.});\n            })\n        .catch(function(error) {\n            console.log(error);\n        })\n        alert(\"Ordering done!\\n\");\n    }\n    render() {\n        return (\n            <div>\n                <form onSubmit={ref.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Quantity: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={ref.state.quantity}\n                               onChange={ref.onChangeQuantity}\n                               />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Order1\" className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}