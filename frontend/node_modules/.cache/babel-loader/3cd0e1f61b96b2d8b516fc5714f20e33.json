{"ast":null,"code":"import _classCallCheck from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-list-product.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nvar ref;\n\nvar LIST_PRODUCT =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LIST_PRODUCT, _Component);\n\n  function LIST_PRODUCT(props) {\n    var _this;\n\n    _classCallCheck(this, LIST_PRODUCT);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LIST_PRODUCT).call(this, props));\n\n    _this.Edit = function (ownername, productname, quantity) {\n      alert(\"You are Editing the Order\"); // this.props.history.push()\n      // alert(\"you are ordering\");\n      // alert(this.state.username);\n\n      ref.props.history.push({\n        pathname: '/login/customer/list-products/edit-product',\n        customername: ref.state.username,\n        vendorname: ownername,\n        productname: productname,\n        quantity: quantity\n      });\n    };\n\n    _this.RateVendor = function (ownername, productname) {\n      alert(\"You are rating the vendor\");\n      ref.props.history.push({\n        pathname: '/login/customer/list-products/rate-vendor',\n        vendorname: ownername,\n        productname: productname\n      });\n    };\n\n    _this.ProductReview = function (ownername, productname) {\n      // alert(\"You are  giving  the Product review\");\n      // this.props.history.push()\n      // alert(\"you are ordering\");\n      // alert(this.state.username);\n      ref.props.history.push({\n        pathname: '/login/customer/list-products/product-review',\n        customername: ref.state.username,\n        vendorname: ownername,\n        productname: productname\n      });\n    };\n\n    ref = _assertThisInitialized(_assertThisInitialized(_this));\n    ref.state = {\n      username: ref.props.location.username,\n      products: [],\n      all_products: []\n    };\n    return _this;\n  }\n\n  _createClass(LIST_PRODUCT, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      axios.get('http://localhost:4000/a1').then(function (response) {\n        ref.setState({\n          products: response.data\n        });\n        axios.get('http://localhost:4000/a').then(function (response) {\n          ref.setState({\n            all_products: response.data\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-striped\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Vendorname\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Productname\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Quantity Ordered\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Quantity left for the order to get placed\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, ref.state.products.map(function (currentProduct, i) {\n        // ref.state.all_products.map((it,i) =>{\n        if (currentProduct.customername === ref.state.username) if (ref.getStatus(currentProduct.productname, currentProduct.vendorname) === \"Waiting\") {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, currentProduct.vendorname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, currentProduct.productname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, currentProduct.quantity), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, \"Waiting\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, ref.getQuantity(currentProduct.productname, currentProduct.vendorname)), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.Edit(currentProduct.vendorname, currentProduct.productname, currentProduct.quantity);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, \"Edit\"));\n        } else if (ref.getStatus(currentProduct.productname, currentProduct.vendorname) === \"Placed\") {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, currentProduct.vendorname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, currentProduct.productname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, currentProduct.quantity), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, \"Placed\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, \"0\"), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.RateVendor(currentProduct.vendorname, currentProduct.productname);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, \"RateVendor\"));\n        } else if (ref.getStatus(currentProduct.productname, currentProduct.vendorname) === \"Dispatched\") {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, currentProduct.vendorname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, currentProduct.productname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, currentProduct.quantity), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, \"Dispatched\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, \"0\"), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.ProductReview(currentProduct.vendorname, currentProduct.productname);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, \"Give Product Review\"));\n        } else {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, currentProduct.vendorname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }, currentProduct.productname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }, currentProduct.quantity), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, ref.getStatus(currentProduct.productname, currentProduct.vendorname)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, \"0\"));\n        } // })\n      }))));\n    }\n  }, {\n    key: \"getStatus\",\n    value: function getStatus(productname, vendorname) {\n      var st = \"Waiting\";\n\n      for (var i = 0; i < ref.state.all_products.length; i++) {\n        if (ref.state.all_products[i].productname === productname && ref.state.all_products[i].username === vendorname) st = ref.state.all_products[i].status;\n      }\n\n      if (st === \"Ready\") st = \"Placed\";\n      return st;\n    }\n  }, {\n    key: \"getQuantity\",\n    value: function getQuantity(productname, vendorname) {\n      var st = 0;\n\n      for (var i = 0; i < ref.state.all_products.length; i++) {\n        if (ref.state.all_products[i].productname === productname && ref.state.all_products[i].username === vendorname) {\n          st = parseInt(ref.state.all_products[i].quantity) - parseInt(ref.state.all_products[i].count);\n          break;\n        }\n      }\n\n      return st;\n    }\n  }]);\n\n  return LIST_PRODUCT;\n}(Component);\n\nexport { LIST_PRODUCT as default };","map":{"version":3,"sources":["/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-list-product.component.js"],"names":["React","Component","axios","ref","LIST_PRODUCT","props","Edit","ownername","productname","quantity","alert","history","push","pathname","customername","state","username","vendorname","RateVendor","ProductReview","location","products","all_products","get","then","response","setState","data","catch","error","console","log","map","currentProduct","i","getStatus","getQuantity","st","length","status","parseInt","count"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nlet ref;\nexport default class LIST_PRODUCT extends Component {\n    \n    constructor(props) {\n        super(props);\n        ref=this;\n        ref.state = {\n            username:ref.props.location.username,\n            products: [],\n            all_products:[]\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/a1')\n             .then(response => {\n                ref.setState({products: response.data});\n                axios.get('http://localhost:4000/a')\n                    .then(response => {\n                    ref.setState({all_products: response.data});\n                })\n                    .catch(function(error) {\n                    console.log(error);\n             })\n        \n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n        \n\n    }\n    Edit=(ownername,productname,quantity) =>{\n        alert(\"You are Editing the Order\");\n        // this.props.history.push()\n        // alert(\"you are ordering\");\n        // alert(this.state.username);\n        ref.props.history.push({\n            pathname:'/login/customer/list-products/edit-product',\n            customername:ref.state.username,\n            vendorname:ownername,\n            productname:productname,\n            quantity:quantity\n          });\n    }\n    RateVendor=(ownername,productname) =>{\n        alert(\"You are rating the vendor\");\n\n        ref.props.history.push({\n            pathname:'/login/customer/list-products/rate-vendor',\n            vendorname:ownername,\n            productname:productname\n          });\n    }\n    ProductReview=(ownername,productname) =>{\n        // alert(\"You are  giving  the Product review\");\n        // this.props.history.push()\n        // alert(\"you are ordering\");\n        // alert(this.state.username);\n        ref.props.history.push({\n            pathname:'/login/customer/list-products/product-review',\n            customername:ref.state.username,\n            vendorname:ownername,\n            productname:productname\n          });\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"table table-striped\">\n                    <thead>\n                   \n                    <tr>\n                        <th>Vendorname</th>\n                        <th>Productname</th>\n                        <th>Quantity Ordered</th>\n                        <th>Status</th>\n                        <th>Quantity left for the order to get placed</th>\n                        {/* <th>Customername</th>  */}\n\n                    </tr>          \n                    </thead>\n                    <tbody>\n                    { \n                        ref.state.products.map((currentProduct, i) => {\n                            // ref.state.all_products.map((it,i) =>{\n                            if(currentProduct.customername ===   ref.state.username)\n                            if(ref.getStatus(currentProduct.productname,currentProduct.vendorname) === \"Waiting\")\n                            {\n                                return (\n                                    <tr>\n                                        <td>{currentProduct.vendorname}</td>\n                                        <td>{currentProduct.productname}</td>\n                                        <td>{currentProduct.quantity}</td>\n                                        <td>Waiting</td>  \n                                        {/* <td>{currentProduct.customername}</td> */}\n                                        <td>{ref.getQuantity(currentProduct.productname,currentProduct.vendorname)}</td>\n                                        <button type=\"button\" onClick={() => this.Edit(currentProduct.vendorname,currentProduct.productname,currentProduct.quantity)}>Edit</button>\n\n\n                                    </tr>\n                                )\n\n\n                            }\n                            else if(ref.getStatus(currentProduct.productname,currentProduct.vendorname) === \"Placed\")\n                            {\n\n                                return (\n                                    <tr>\n                                        <td>{currentProduct.vendorname}</td>\n                                        <td>{currentProduct.productname}</td>\n                                        <td>{currentProduct.quantity}</td>\n                                        <td>Placed</td>  \n                                        {/* <td>{currentProduct.customername}</td> */}\n                                        <td>0</td>\n                                        <button type=\"button\" onClick={() => this.RateVendor(currentProduct.vendorname,currentProduct.productname)}>RateVendor</button>\n\n\n                                    </tr>\n                                )\n\n\n                            }\n                            else if(ref.getStatus(currentProduct.productname,currentProduct.vendorname) === \"Dispatched\")\n                            {\n\n                                return (\n                                    <tr>\n                                        <td>{currentProduct.vendorname}</td>\n                                        <td>{currentProduct.productname}</td>\n                                        <td>{currentProduct.quantity}</td>\n                                        <td>Dispatched</td>  \n                                        {/* <td>{currentProduct.customername}</td> */}\n                                        <td>0</td>\n                                        <button type=\"button\" onClick={() => this.ProductReview(currentProduct.vendorname,currentProduct.productname)}>Give Product Review</button>\n\n\n                                    </tr>\n                                )\n\n\n                            }\n\n                            else\n                            {\n\n                                return (\n                                    <tr>\n                                        <td>{currentProduct.vendorname}</td>\n                                        <td>{currentProduct.productname}</td>\n                                        <td>{currentProduct.quantity}</td>\n                                        <td>{ref.getStatus(currentProduct.productname,currentProduct.vendorname)}</td>  \n                                        {/* <td>{currentProduct.customername}</td> */}\n                                        <td>0</td>\n                                    </tr>\n                                )\n\n\n\n                            }\n                            \n                            // })\n                        })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n    getStatus(productname,vendorname)\n    {\n        let st=\"Waiting\";\n        for(var i=0;i<ref.state.all_products.length;i++)\n            {\n                if(ref.state.all_products[i].productname === productname && ref.state.all_products[i].username === vendorname)\n                    st=ref.state.all_products[i].status;\n            }\n        if(st === \"Ready\")\n            st=\"Placed\";\n        return st;\n    }\n    getQuantity(productname,vendorname)\n    {\n        let st=0;\n        for(var i=0;i<ref.state.all_products.length;i++)\n            {\n                if(ref.state.all_products[i].productname === productname && ref.state.all_products[i].username === vendorname)\n                {\n                    st=parseInt(ref.state.all_products[i].quantity)  - parseInt(ref.state.all_products[i].count);\n                    break;\n                }\n            }\n        return st;\n    }\n}"]},"metadata":{},"sourceType":"module"}