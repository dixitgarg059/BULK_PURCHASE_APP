{"ast":null,"code":"import _classCallCheck from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-list-product.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nvar ref;\n\nvar LIST_PRODUCT =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LIST_PRODUCT, _Component);\n\n  function LIST_PRODUCT(props) {\n    var _this;\n\n    _classCallCheck(this, LIST_PRODUCT);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LIST_PRODUCT).call(this, props));\n\n    _this.Edit = function (ownername, productname, quantity) {\n      ref.props.history.push({\n        pathname: '/login/customer/list-products/edit-product',\n        customername: ref.state.username,\n        vendorname: ownername,\n        productname: productname,\n        quantity: quantity\n      });\n    };\n\n    _this.RateVendor = function (ownername, productname) {\n      ref.props.history.push({\n        pathname: '/login/customer/list-products/rate-vendor',\n        vendorname: ownername\n      });\n    };\n\n    _this.ProductReview = function (ownername, productname) {\n      ref.props.history.push({\n        pathname: '/login/customer/list-products/product-review',\n        customername: ref.state.username,\n        vendorname: ownername,\n        productname: productname\n      });\n    };\n\n    _this.sortByPrice = function () {\n      var sortedProductsAsc;\n      sortedProductsAsc = _this.state.products.sort(function (a, b) {\n        return parseInt(a.price) - parseInt(b.price);\n      });\n\n      _this.setState({\n        products: sortedProductsAsc\n      });\n    };\n\n    _this.sortByQuantity = function () {\n      var sortedProductsAsc;\n      sortedProductsAsc = _this.state.products.sort(function (a, b) {\n        return parseInt(a.price) - parseInt(b.price);\n      });\n\n      _this.setState({\n        products: sortedProductsAsc\n      });\n    };\n\n    _this.sortByRating = function () {\n      var sortedProductsAsc;\n      sortedProductsAsc = _this.state.products.sort(function (a, b) {\n        return parseInt(a.price) - parseInt(b.price);\n      });\n\n      _this.setState({\n        products: sortedProductsAsc\n      });\n    };\n\n    ref = _assertThisInitialized(_assertThisInitialized(_this));\n    ref.state = {\n      username: ref.props.location.username,\n      products: [],\n      all_products: [],\n      users: []\n    };\n    return _this;\n  }\n\n  _createClass(LIST_PRODUCT, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      axios.get('http://localhost:4000/a1').then(function (response) {\n        ref.setState({\n          products: response.data\n        });\n        axios.get('http://localhost:4000/a').then(function (response) {\n          ref.setState({\n            all_products: response.data\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get('http://localhost:4000/').then(function (response) {\n        ref.setState({\n          users: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-striped\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Vendorname\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Productname\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Quantity Ordered\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Vendor Rating\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Quantity left for the order to get placed\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, ref.state.products.map(function (currentProduct, i) {\n        if (currentProduct.customername === ref.state.username) if (ref.getStatus(currentProduct.productname, currentProduct.vendorname) === \"Waiting\") {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, currentProduct.vendorname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, currentProduct.productname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, currentProduct.quantity), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, ref.getVendorRating(currentProduct.vendorname)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, \"Waiting\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, ref.getQuantity(currentProduct.productname, currentProduct.vendorname)));\n        } else if (ref.getStatus(currentProduct.productname, currentProduct.vendorname) === \"Placed\") {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, currentProduct.vendorname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, currentProduct.productname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, currentProduct.quantity), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, ref.getVendorRating(currentProduct.vendorname)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, \"Placed\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, \"0\"), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.RateVendor(currentProduct.vendorname, currentProduct.productname);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, \"RateVendor\"));\n        } else if (ref.getStatus(currentProduct.productname, currentProduct.vendorname) === \"Dispatched\") {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }, currentProduct.vendorname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, currentProduct.productname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, currentProduct.quantity), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, ref.getVendorRating(currentProduct.vendorname)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, \"Dispatched\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, \"0\"), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.ProductReview(currentProduct.vendorname, currentProduct.productname);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, \"Give Product Review\"));\n        } else {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }, currentProduct.vendorname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          }, currentProduct.productname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, currentProduct.quantity), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, ref.getVendorRating(currentProduct.vendorname)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }, ref.getStatus(currentProduct.productname, currentProduct.vendorname)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            },\n            __self: this\n          }, \"0\"));\n        }\n      }))));\n    }\n  }, {\n    key: \"getStatus\",\n    value: function getStatus(productname, vendorname) {\n      var st = \"Waiting\";\n\n      for (var i = 0; i < ref.state.all_products.length; i++) {\n        if (ref.state.all_products[i].productname === productname && ref.state.all_products[i].username === vendorname) st = ref.state.all_products[i].status;\n      }\n\n      if (st === \"Ready\") st = \"Placed\";\n      return st;\n    }\n  }, {\n    key: \"getQuantity\",\n    value: function getQuantity(productname, vendorname) {\n      var st = 0;\n\n      for (var i = 0; i < ref.state.all_products.length; i++) {\n        if (ref.state.all_products[i].productname === productname && ref.state.all_products[i].username === vendorname) {\n          st = parseInt(ref.state.all_products[i].quantity) - parseInt(ref.state.all_products[i].count);\n          break;\n        }\n      }\n\n      return st;\n    }\n  }, {\n    key: \"getVendorRating\",\n    value: function getVendorRating(vendorname) {\n      var ret = 0;\n\n      for (var i = 0; i < ref.state.users.length; i++) {\n        if (ref.state.users[i].username === vendorname && ref.state.users[i].type === \"Vendor\") {\n          var sum = ref.state.users[i].sum;\n          var cnt = ref.state.users[i].count;\n          ret = sum / cnt;\n          break;\n        }\n      }\n\n      if (ret == 0) ret = \"Unrated\";\n      return ret;\n    }\n  }]);\n\n  return LIST_PRODUCT;\n}(Component);\n\nexport { LIST_PRODUCT as default };","map":{"version":3,"sources":["/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-list-product.component.js"],"names":["React","Component","axios","ref","LIST_PRODUCT","props","Edit","ownername","productname","quantity","history","push","pathname","customername","state","username","vendorname","RateVendor","ProductReview","sortByPrice","sortedProductsAsc","products","sort","a","b","parseInt","price","setState","sortByQuantity","sortByRating","location","all_products","users","get","then","response","data","catch","error","console","log","map","currentProduct","i","getStatus","getVendorRating","getQuantity","st","length","status","count","ret","type","sum","cnt"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAIC,GAAJ;;IACqBC,Y;;;;;AAEjB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UAmCnBC,IAnCmB,GAmCd,UAACC,SAAD,EAAWC,WAAX,EAAuBC,QAAvB,EAAmC;AACpCN,MAAAA,GAAG,CAACE,KAAJ,CAAUK,OAAV,CAAkBC,IAAlB,CAAuB;AACnBC,QAAAA,QAAQ,EAAC,4CADU;AAEnBC,QAAAA,YAAY,EAACV,GAAG,CAACW,KAAJ,CAAUC,QAFJ;AAGnBC,QAAAA,UAAU,EAACT,SAHQ;AAInBC,QAAAA,WAAW,EAACA,WAJO;AAKnBC,QAAAA,QAAQ,EAACA;AALU,OAAvB;AAOH,KA3CkB;;AAAA,UA4CnBQ,UA5CmB,GA4CR,UAACV,SAAD,EAAWC,WAAX,EAA0B;AACjCL,MAAAA,GAAG,CAACE,KAAJ,CAAUK,OAAV,CAAkBC,IAAlB,CAAuB;AACnBC,QAAAA,QAAQ,EAAC,2CADU;AAEnBI,QAAAA,UAAU,EAACT;AAFQ,OAAvB;AAIH,KAjDkB;;AAAA,UAkDnBW,aAlDmB,GAkDL,UAACX,SAAD,EAAWC,WAAX,EAA0B;AACpCL,MAAAA,GAAG,CAACE,KAAJ,CAAUK,OAAV,CAAkBC,IAAlB,CAAuB;AACnBC,QAAAA,QAAQ,EAAC,8CADU;AAEnBC,QAAAA,YAAY,EAACV,GAAG,CAACW,KAAJ,CAAUC,QAFJ;AAGnBC,QAAAA,UAAU,EAACT,SAHQ;AAInBC,QAAAA,WAAW,EAACA;AAJO,OAAvB;AAMH,KAzDkB;;AAAA,UA0DnBW,WA1DmB,GA0DP,YAAI;AAEZ,UAAIC,iBAAJ;AACAA,MAAAA,iBAAiB,GAAE,MAAKN,KAAL,CAAWO,QAAX,CAAoBC,IAApB,CAAyB,UAACC,CAAD,EAAGC,CAAH,EAAO;AAChD,eAAOC,QAAQ,CAACF,CAAC,CAACG,KAAH,CAAR,GAAqBD,QAAQ,CAACD,CAAC,CAACE,KAAH,CAApC;AACF,OAFkB,CAAnB;;AAIA,YAAKC,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAACD;AADC,OAAd;AAGH,KApEkB;;AAAA,UAqEnBQ,cArEmB,GAqEJ,YAAI;AAEf,UAAIR,iBAAJ;AACAA,MAAAA,iBAAiB,GAAE,MAAKN,KAAL,CAAWO,QAAX,CAAoBC,IAApB,CAAyB,UAACC,CAAD,EAAGC,CAAH,EAAO;AAChD,eAAOC,QAAQ,CAACF,CAAC,CAACG,KAAH,CAAR,GAAqBD,QAAQ,CAACD,CAAC,CAACE,KAAH,CAApC;AACF,OAFkB,CAAnB;;AAIA,YAAKC,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAACD;AADC,OAAd;AAGH,KA/EkB;;AAAA,UAgFnBS,YAhFmB,GAgFN,YAAI;AAEb,UAAIT,iBAAJ;AACAA,MAAAA,iBAAiB,GAAE,MAAKN,KAAL,CAAWO,QAAX,CAAoBC,IAApB,CAAyB,UAACC,CAAD,EAAGC,CAAH,EAAO;AAChD,eAAOC,QAAQ,CAACF,CAAC,CAACG,KAAH,CAAR,GAAqBD,QAAQ,CAACD,CAAC,CAACE,KAAH,CAApC;AACF,OAFkB,CAAnB;;AAGA,YAAKC,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAACD;AADC,OAAd;AAGH,KAzFkB;;AAEfjB,IAAAA,GAAG,wDAAH;AACAA,IAAAA,GAAG,CAACW,KAAJ,GAAY;AACRC,MAAAA,QAAQ,EAACZ,GAAG,CAACE,KAAJ,CAAUyB,QAAV,CAAmBf,QADpB;AAERM,MAAAA,QAAQ,EAAE,EAFF;AAGRU,MAAAA,YAAY,EAAC,EAHL;AAIRC,MAAAA,KAAK,EAAC;AAJE,KAAZ;AAHe;AASlB;;;;wCACmB;AAChB9B,MAAAA,KAAK,CAAC+B,GAAN,CAAU,0BAAV,EACMC,IADN,CACW,UAAAC,QAAQ,EAAI;AACfhC,QAAAA,GAAG,CAACwB,QAAJ,CAAa;AAACN,UAAAA,QAAQ,EAAEc,QAAQ,CAACC;AAApB,SAAb;AACAlC,QAAAA,KAAK,CAAC+B,GAAN,CAAU,yBAAV,EACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AAClBhC,UAAAA,GAAG,CAACwB,QAAJ,CAAa;AAACI,YAAAA,YAAY,EAAEI,QAAQ,CAACC;AAAxB,WAAb;AACH,SAHD,EAIKC,KAJL,CAIW,UAASC,KAAT,EAAgB;AACvBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACN,SANE;AAQF,OAXN,EAYMD,KAZN,CAYY,UAASC,KAAT,EAAgB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAdN;AAgBApC,MAAAA,KAAK,CAAC+B,GAAN,CAAU,wBAAV,EACMC,IADN,CACW,UAAAC,QAAQ,EAAI;AACdhC,QAAAA,GAAG,CAACwB,QAAJ,CAAa;AAACK,UAAAA,KAAK,EAACG,QAAQ,CAACC;AAAhB,SAAb;AACH,OAHN,EAIMC,KAJN,CAIY,UAASC,KAAT,EAAe;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OANN;AAOH;;;6BAyDQ;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDANJ,CAFA,CADJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEInC,GAAG,CAACW,KAAJ,CAAUO,QAAV,CAAmBoB,GAAnB,CAAuB,UAACC,cAAD,EAAiBC,CAAjB,EAAuB;AAC1C,YAAGD,cAAc,CAAC7B,YAAf,KAAkCV,GAAG,CAACW,KAAJ,CAAUC,QAA/C,EACA,IAAGZ,GAAG,CAACyC,SAAJ,CAAcF,cAAc,CAAClC,WAA7B,EAAyCkC,cAAc,CAAC1B,UAAxD,MAAwE,SAA3E,EACA;AACI,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK0B,cAAc,CAAC1B,UAApB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK0B,cAAc,CAAClC,WAApB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKkC,cAAc,CAACjC,QAApB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKN,GAAG,CAAC0C,eAAJ,CAAoBH,cAAc,CAAC1B,UAAnC,CAAL,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKb,GAAG,CAAC2C,WAAJ,CAAgBJ,cAAc,CAAClC,WAA/B,EAA2CkC,cAAc,CAAC1B,UAA1D,CAAL,CANJ,CADJ;AAYH,SAdD,MAeK,IAAGb,GAAG,CAACyC,SAAJ,CAAcF,cAAc,CAAClC,WAA7B,EAAyCkC,cAAc,CAAC1B,UAAxD,MAAwE,QAA3E,EACL;AAEI,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK0B,cAAc,CAAC1B,UAApB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK0B,cAAc,CAAClC,WAApB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKkC,cAAc,CAACjC,QAApB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKN,GAAG,CAAC0C,eAAJ,CAAoBH,cAAc,CAAC1B,UAAnC,CAAL,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,EAOI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACC,UAAL,CAAgByB,cAAc,CAAC1B,UAA/B,EAA0C0B,cAAc,CAAClC,WAAzD,CAAN;AAAA,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPJ,CADJ;AAeH,SAlBI,MAmBA,IAAGL,GAAG,CAACyC,SAAJ,CAAcF,cAAc,CAAClC,WAA7B,EAAyCkC,cAAc,CAAC1B,UAAxD,MAAwE,YAA3E,EACL;AAEI,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK0B,cAAc,CAAC1B,UAApB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK0B,cAAc,CAAClC,WAApB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKkC,cAAc,CAACjC,QAApB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKN,GAAG,CAAC0C,eAAJ,CAAoBH,cAAc,CAAC1B,UAAnC,CAAL,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,EAOI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACE,aAAL,CAAmBwB,cAAc,CAAC1B,UAAlC,EAA6C0B,cAAc,CAAClC,WAA5D,CAAN;AAAA,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAPJ,CADJ;AAaH,SAhBI,MAkBL;AACI,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKkC,cAAc,CAAC1B,UAApB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK0B,cAAc,CAAClC,WAApB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKkC,cAAc,CAACjC,QAApB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKN,GAAG,CAAC0C,eAAJ,CAAoBH,cAAc,CAAC1B,UAAnC,CAAL,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKb,GAAG,CAACyC,SAAJ,CAAcF,cAAc,CAAClC,WAA7B,EAAyCkC,cAAc,CAAC1B,UAAxD,CAAL,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,CADJ;AAUH;AACJ,OAlED,CAFJ,CAZJ,CADJ,CADJ;AAwFH;;;8BACSR,W,EAAYQ,U,EACtB;AACI,UAAI+B,EAAE,GAAC,SAAP;;AACA,WAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACxC,GAAG,CAACW,KAAJ,CAAUiB,YAAV,CAAuBiB,MAArC,EAA4CL,CAAC,EAA7C,EACI;AACI,YAAGxC,GAAG,CAACW,KAAJ,CAAUiB,YAAV,CAAuBY,CAAvB,EAA0BnC,WAA1B,KAA0CA,WAA1C,IAAyDL,GAAG,CAACW,KAAJ,CAAUiB,YAAV,CAAuBY,CAAvB,EAA0B5B,QAA1B,KAAuCC,UAAnG,EACI+B,EAAE,GAAC5C,GAAG,CAACW,KAAJ,CAAUiB,YAAV,CAAuBY,CAAvB,EAA0BM,MAA7B;AACP;;AACL,UAAGF,EAAE,KAAK,OAAV,EACIA,EAAE,GAAC,QAAH;AACJ,aAAOA,EAAP;AACH;;;gCACWvC,W,EAAYQ,U,EACxB;AACI,UAAI+B,EAAE,GAAC,CAAP;;AACA,WAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACxC,GAAG,CAACW,KAAJ,CAAUiB,YAAV,CAAuBiB,MAArC,EAA4CL,CAAC,EAA7C,EACI;AACI,YAAGxC,GAAG,CAACW,KAAJ,CAAUiB,YAAV,CAAuBY,CAAvB,EAA0BnC,WAA1B,KAA0CA,WAA1C,IAAyDL,GAAG,CAACW,KAAJ,CAAUiB,YAAV,CAAuBY,CAAvB,EAA0B5B,QAA1B,KAAuCC,UAAnG,EACA;AACI+B,UAAAA,EAAE,GAACtB,QAAQ,CAACtB,GAAG,CAACW,KAAJ,CAAUiB,YAAV,CAAuBY,CAAvB,EAA0BlC,QAA3B,CAAR,GAAgDgB,QAAQ,CAACtB,GAAG,CAACW,KAAJ,CAAUiB,YAAV,CAAuBY,CAAvB,EAA0BO,KAA3B,CAA3D;AACA;AACH;AACJ;;AACL,aAAOH,EAAP;AACH;;;oCACe/B,U,EAChB;AACI,UAAImC,GAAG,GAAC,CAAR;;AACA,WAAI,IAAIR,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACxC,GAAG,CAACW,KAAJ,CAAUkB,KAAV,CAAgBgB,MAA9B,EAAqCL,CAAC,EAAtC,EACA;AACI,YAAGxC,GAAG,CAACW,KAAJ,CAAUkB,KAAV,CAAgBW,CAAhB,EAAmB5B,QAAnB,KAAgCC,UAAhC,IAA8Cb,GAAG,CAACW,KAAJ,CAAUkB,KAAV,CAAgBW,CAAhB,EAAmBS,IAAnB,KAA2B,QAA5E,EACA;AACI,cAAIC,GAAG,GAAClD,GAAG,CAACW,KAAJ,CAAUkB,KAAV,CAAgBW,CAAhB,EAAmBU,GAA3B;AACA,cAAIC,GAAG,GAACnD,GAAG,CAACW,KAAJ,CAAUkB,KAAV,CAAgBW,CAAhB,EAAmBO,KAA3B;AACAC,UAAAA,GAAG,GAACE,GAAG,GAACC,GAAR;AACA;AACH;AACJ;;AACD,UAAGH,GAAG,IAAE,CAAR,EACIA,GAAG,GAAC,SAAJ;AACJ,aAAOA,GAAP;AACH;;;;EAhOqClD,S;;SAArBG,Y","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nlet ref;\nexport default class LIST_PRODUCT extends Component {\n    \n    constructor(props) {\n        super(props);\n        ref=this;\n        ref.state = {\n            username:ref.props.location.username,\n            products: [],\n            all_products:[],\n            users:[]\n        }\n    }\n    componentDidMount() {\n        axios.get('http://localhost:4000/a1')\n             .then(response => {\n                ref.setState({products: response.data});\n                axios.get('http://localhost:4000/a')\n                    .then(response => {\n                    ref.setState({all_products: response.data});\n                })\n                    .catch(function(error) {\n                    console.log(error);\n             })\n        \n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n        \n        axios.get('http://localhost:4000/')\n             .then(response => {\n                 ref.setState({users:response.data});\n             })\n             .catch(function(error){\n                 console.log(error);\n             })\n    }\n    Edit=(ownername,productname,quantity) =>{\n        ref.props.history.push({\n            pathname:'/login/customer/list-products/edit-product',\n            customername:ref.state.username,\n            vendorname:ownername,\n            productname:productname,\n            quantity:quantity\n          });\n    }\n    RateVendor=(ownername,productname) =>{\n        ref.props.history.push({\n            pathname:'/login/customer/list-products/rate-vendor',\n            vendorname:ownername\n          });\n    }\n    ProductReview=(ownername,productname) =>{\n        ref.props.history.push({\n            pathname:'/login/customer/list-products/product-review',\n            customername:ref.state.username,\n            vendorname:ownername,\n            productname:productname\n          });\n    }\n    sortByPrice=()=>{\n\n        let sortedProductsAsc;\n        sortedProductsAsc= this.state.products.sort((a,b)=>{\n           return parseInt(a.price)  - parseInt(b.price);\n        })\n\n        this.setState({\n            products:sortedProductsAsc\n        })\n    }\n    sortByQuantity=()=>{\n\n        let sortedProductsAsc;\n        sortedProductsAsc= this.state.products.sort((a,b)=>{\n           return parseInt(a.price)  - parseInt(b.price);\n        })\n\n        this.setState({\n            products:sortedProductsAsc\n        })\n    }\n    sortByRating=()=>{\n\n        let sortedProductsAsc;\n        sortedProductsAsc= this.state.products.sort((a,b)=>{\n           return parseInt(a.price)  - parseInt(b.price);\n        })\n        this.setState({\n            products:sortedProductsAsc\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"table table-striped\">\n                    <thead>\n                   \n                    <tr>\n                        <th>Vendorname</th>\n                        <th>Productname</th>\n                        <th>Quantity Ordered</th>\n                        <th>Vendor Rating</th>\n                        <th>Status</th>\n                        <th>Quantity left for the order to get placed</th>\n                    </tr>          \n                    </thead>\n                    <tbody>\n                    { \n                        ref.state.products.map((currentProduct, i) => {\n                            if(currentProduct.customername ===   ref.state.username)\n                            if(ref.getStatus(currentProduct.productname,currentProduct.vendorname) === \"Waiting\")\n                            {\n                                return (\n                                    <tr>\n                                        <td>{currentProduct.vendorname}</td>\n                                        <td>{currentProduct.productname}</td>\n                                        <td>{currentProduct.quantity}</td>\n                                        <td>{ref.getVendorRating(currentProduct.vendorname)}</td>\n                                        <td>Waiting</td>  \n                                        <td>{ref.getQuantity(currentProduct.productname,currentProduct.vendorname)}</td>\n                                        </tr>\n                                )\n\n\n                            }\n                            else if(ref.getStatus(currentProduct.productname,currentProduct.vendorname) === \"Placed\")\n                            {\n\n                                return (\n                                    <tr>\n                                        <td>{currentProduct.vendorname}</td>\n                                        <td>{currentProduct.productname}</td>\n                                        <td>{currentProduct.quantity}</td>\n                                        <td>{ref.getVendorRating(currentProduct.vendorname)}</td>\n                                        <td>Placed</td>  \n                                        <td>0</td>\n                                        <button type=\"button\" onClick={() => this.RateVendor(currentProduct.vendorname,currentProduct.productname)}>RateVendor</button>\n\n\n                                    </tr>\n                                )\n\n\n                            }\n                            else if(ref.getStatus(currentProduct.productname,currentProduct.vendorname) === \"Dispatched\")\n                            {\n\n                                return (\n                                    <tr>\n                                        <td>{currentProduct.vendorname}</td>\n                                        <td>{currentProduct.productname}</td>\n                                        <td>{currentProduct.quantity}</td>\n                                        <td>{ref.getVendorRating(currentProduct.vendorname)}</td>\n                                        <td>Dispatched</td>  \n                                        <td>0</td>\n                                        <button type=\"button\" onClick={() => this.ProductReview(currentProduct.vendorname,currentProduct.productname)}>Give Product Review</button>\n\n\n                                    </tr>\n                                )\n                            }\n                            else\n                            {\n                                return (\n                                    <tr>\n                                        <td>{currentProduct.vendorname}</td>\n                                        <td>{currentProduct.productname}</td>\n                                        <td>{currentProduct.quantity}</td>\n                                        <td>{ref.getVendorRating(currentProduct.vendorname)}</td>\n                                        <td>{ref.getStatus(currentProduct.productname,currentProduct.vendorname)}</td>  \n                                        <td>0</td>\n                                    </tr>\n                                )\n                            }\n                        })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n    getStatus(productname,vendorname)\n    {\n        let st=\"Waiting\";\n        for(var i=0;i<ref.state.all_products.length;i++)\n            {\n                if(ref.state.all_products[i].productname === productname && ref.state.all_products[i].username === vendorname)\n                    st=ref.state.all_products[i].status;\n            }\n        if(st === \"Ready\")\n            st=\"Placed\";\n        return st;\n    }\n    getQuantity(productname,vendorname)\n    {\n        let st=0;\n        for(var i=0;i<ref.state.all_products.length;i++)\n            {\n                if(ref.state.all_products[i].productname === productname && ref.state.all_products[i].username === vendorname)\n                {\n                    st=parseInt(ref.state.all_products[i].quantity)  - parseInt(ref.state.all_products[i].count);\n                    break;\n                }\n            }\n        return st;\n    }\n    getVendorRating(vendorname)\n    {    \n        let ret=0;\n        for(var i=0;i<ref.state.users.length;i++)\n        {\n            if(ref.state.users[i].username === vendorname && ref.state.users[i].type ===\"Vendor\")\n            {\n                let sum=ref.state.users[i].sum;\n                let cnt=ref.state.users[i].count;\n                ret=sum/cnt;\n                break;\n            }\n        }\n        if(ret==0)\n            ret=\"Unrated\";\n        return ret;\n    }\n}"]},"metadata":{},"sourceType":"module"}