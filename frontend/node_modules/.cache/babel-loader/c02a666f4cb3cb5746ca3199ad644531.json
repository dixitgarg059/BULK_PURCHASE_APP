{"ast":null,"code":"import _classCallCheck from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-order-product.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nvar ref;\n\nvar ORDER_PRODUCT =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ORDER_PRODUCT, _Component);\n\n  function ORDER_PRODUCT(props) {\n    var _this;\n\n    _classCallCheck(this, ORDER_PRODUCT);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ORDER_PRODUCT).call(this, props));\n    ref = _assertThisInitialized(_assertThisInitialized(_this));\n    ref.state = {\n      customername: ref.props.location.customername,\n      vendorname: ref.props.location.vendorname,\n      productname: ref.props.location.productname,\n      quantity: 0\n    };\n    ref.onChangeQuantity = ref.onChangeQuantity.bind(ref);\n    return _this;\n  }\n\n  _createClass(ORDER_PRODUCT, [{\n    key: \"onChangeQuantity\",\n    value: function onChangeQuantity(event) {\n      ref.setState({\n        quantity: event.target.value\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var Product = {\n        customername: ref.state.customername,\n        vendorname: ref.state.vendorname,\n        productname: ref.state.productname,\n        quantity: ref.state.quantity,\n        status: \"WAITING\"\n      };\n      axios.post('http://localhost:4000/add_order', Product).then(function (res) {\n        return console.log(res.data);\n      });\n      var Pr = {\n        username: ref.state.vendorname,\n        productname: ref.state.productname\n      };\n      var new_cnt = 0;\n      var stat = \"Waiting\";\n      axios.post('http://localhost:4000/check1', Pr).then(function (response) {\n        var quant = parseInt(response.data.quantity);\n        var cnt = response.data.count;\n        new_cnt = parseInt(cnt) + parseInt(ref.state.quantity);\n\n        if (new_cnt >= quant) {\n          stat = \"Ready\";\n        } else {\n          stat = \"Waiting\";\n        }\n\n        var Pr2 = {\n          username: ref.state.vendorname,\n          productname: ref.state.productname,\n          count: new_cnt,\n          status: stat\n        };\n        axios.put('http://localhost:4000/update-product', Pr2).then(function (response) {\n          return console.log(\"\");\n        });\n        alert(\"Ordering done!\\n\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-expand-lg navbar-light bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"collapse navbar-collapse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"navbar-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.searchProducts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Search Products\")), React.createElement(\"li\", {\n        className: \"navbar-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.listProducts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"List Products\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: ref.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Quantity: \"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: ref.state.quantity,\n        onChange: ref.onChangeQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Order\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ORDER_PRODUCT;\n}(Component);\n\nexport { ORDER_PRODUCT as default };","map":{"version":3,"sources":["/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-order-product.component.js"],"names":["React","Component","axios","ref","ORDER_PRODUCT","props","state","customername","location","vendorname","productname","quantity","onChangeQuantity","bind","event","setState","target","value","e","preventDefault","Product","status","post","then","res","console","log","data","Pr","username","new_cnt","stat","response","quant","parseInt","cnt","count","Pr2","put","alert","searchProducts","listProducts","onSubmit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nlet ref;\nexport default class ORDER_PRODUCT extends Component {\n    \n    constructor(props) {\n        super(props);\n        ref=this;\n        ref.state = {\n            customername:ref.props.location.customername,\n            vendorname:ref.props.location.vendorname,\n            productname:ref.props.location.productname,\n            quantity:0\n        };\n        ref.onChangeQuantity = ref.onChangeQuantity.bind(ref);\n    \n\n    }\n    \n    onChangeQuantity(event) {\n        ref.setState({ quantity: event.target.value });\n    }\n    onSubmit(e) {\n        e.preventDefault();\n\n        const Product={\n            customername:ref.state.customername,\n            vendorname:ref.state.vendorname,\n            productname:ref.state.productname,\n            quantity:ref.state.quantity,\n            status:\"WAITING\"\n        }\n        axios.post('http://localhost:4000/add_order', Product)\n            .then(res => console.log(res.data));\n        const Pr={\n            username:ref.state.vendorname,\n            productname:ref.state.productname\n        }\n        let new_cnt=0;\n        let stat=\"Waiting\";\n        axios.post('http://localhost:4000/check1',Pr)\n            .then(response => {\n                \n                let quant=parseInt(response.data.quantity);\n                let cnt=response.data.count;\n                new_cnt=parseInt(cnt)+parseInt(ref.state.quantity);\n                if(new_cnt >= quant)\n                {\n                    \n                    stat=\"Ready\";\n                      \n\n                }\n                else\n                {\n                    \n                    stat=\"Waiting\";\n                }\n                \n                const Pr2={\n                    username:ref.state.vendorname,\n                    productname:ref.state.productname,\n                    count:new_cnt,\n                    status:stat\n                }\n                axios.put('http://localhost:4000/update-product',Pr2)\n                    .then(response => console.log(\"\"));\n                    alert(\"Ordering done!\\n\");\n            });\n        \n    }\n    render() {\n        return (\n            <div>\n            <div className=\"container\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <div className=\"collapse navbar-collapse\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"navbar-item\">\n                <button type=\"button\" onClick={this.searchProducts}>\n                  Search Products\n                </button>\n              </li>\n              <li className=\"navbar-item\">\n                <button type=\"button\" onClick={this.listProducts}>\n                  List Products\n                </button>\n              </li>\n            </ul>\n          </div>\n        </nav>\n        <br/>\n      </div>\n            <div>\n\n                <form onSubmit={ref.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Quantity: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={ref.state.quantity}\n                               onChange={ref.onChangeQuantity}\n                               />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Order\" className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n            </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}