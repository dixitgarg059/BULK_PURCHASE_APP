{"ast":null,"code":"import _classCallCheck from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-order-product.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nvar ref;\n\nvar ORDER_PRODUCT =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ORDER_PRODUCT, _Component);\n\n  function ORDER_PRODUCT(props) {\n    var _this;\n\n    _classCallCheck(this, ORDER_PRODUCT);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ORDER_PRODUCT).call(this, props));\n\n    _this.searchProducts = function () {\n      _this.props.history.push({\n        pathname: '/login/customer/search-products',\n        username: _this.state.username\n      });\n    };\n\n    _this.listProducts = function () {\n      _this.props.history.push({\n        pathname: '/login/customer/list-products',\n        username: _this.state.username\n      });\n    };\n\n    ref = _assertThisInitialized(_assertThisInitialized(_this));\n    ref.state = {\n      customername: ref.props.location.customername,\n      vendorname: ref.props.location.vendorname,\n      productname: ref.props.location.productname,\n      username: ref.props.location.username,\n      quantity: 0\n    };\n    ref.onChangeQuantity = ref.onChangeQuantity.bind(ref);\n    return _this;\n  }\n\n  _createClass(ORDER_PRODUCT, [{\n    key: \"onChangeQuantity\",\n    value: function onChangeQuantity(event) {\n      ref.setState({\n        quantity: event.target.value\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var Product = {\n        customername: ref.state.customername,\n        vendorname: ref.state.vendorname,\n        productname: ref.state.productname,\n        quantity: ref.state.quantity,\n        status: \"WAITING\"\n      };\n      axios.post('http://localhost:4000/add_order', Product).then(function (res) {\n        return console.log(res.data);\n      });\n      var Pr = {\n        username: ref.state.vendorname,\n        productname: ref.state.productname\n      };\n      var new_cnt = 0;\n      var stat = \"Waiting\";\n      var flg1 = 1;\n\n      if (ref.state.quantity == 0) {\n        alert(\"invalid input\\n\");\n        flg1 = 0;\n      }\n\n      if (flg1 == 1) {\n        axios.post('http://localhost:4000/check1', Pr).then(function (response) {\n          var quant = parseInt(response.data.quantity);\n          var cnt = response.data.count;\n          new_cnt = parseInt(cnt) + parseInt(ref.state.quantity);\n          var flg = 1;\n\n          if (new_cnt > quant) {\n            alert(\"ordered quantity cannot exceed quantity remaining in the bundle\");\n            flg = 0;\n          } else if (new_cnt == quant) {\n            stat = \"Ready\";\n          } else {\n            stat = \"Waiting\";\n          }\n\n          if (flg == 1) {\n            var Pr2 = {\n              username: ref.state.vendorname,\n              productname: ref.state.productname,\n              count: new_cnt,\n              status: stat\n            };\n            axios.put('http://localhost:4000/update-product', Pr2).then(function (response) {\n              return console.log(\"\");\n            });\n            alert(\"Ordering done!\\n\");\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-expand-lg navbar-light bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"collapse navbar-collapse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"navbar-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.searchProducts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Search Products\")), React.createElement(\"li\", {\n        className: \"navbar-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.listProducts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"List Products\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: ref.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Quantity: \"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: ref.state.quantity,\n        onChange: ref.onChangeQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Order\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ORDER_PRODUCT;\n}(Component);\n\nexport { ORDER_PRODUCT as default };","map":{"version":3,"sources":["/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-order-product.component.js"],"names":["React","Component","axios","ref","ORDER_PRODUCT","props","searchProducts","history","push","pathname","username","state","listProducts","customername","location","vendorname","productname","quantity","onChangeQuantity","bind","event","setState","target","value","e","preventDefault","Product","status","post","then","res","console","log","data","Pr","new_cnt","stat","flg1","alert","response","quant","parseInt","cnt","count","flg","Pr2","put","onSubmit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nlet ref;\nexport default class ORDER_PRODUCT extends Component {\n    \n    constructor(props) {\n        super(props);\n        ref=this;\n        ref.state = {\n            customername:ref.props.location.customername,\n            vendorname:ref.props.location.vendorname,\n            productname:ref.props.location.productname,\n            username:ref.props.location.username,\n            quantity:0\n        };\n        ref.onChangeQuantity = ref.onChangeQuantity.bind(ref);\n    \n\n    }\n    \n    onChangeQuantity(event) {\n\n        ref.setState({ quantity: event.target.value });\n    }\n    searchProducts=() => {\n    this.props.history.push({\n        pathname:'/login/customer/search-products',\n        username:this.state.username});\n  }\n  listProducts=() => {\n\n      this.props.history.push({\n          pathname:'/login/customer/list-products',\n          username:this.state.username\n      });\n  }\n    onSubmit(e) {\n        e.preventDefault();\n\n        const Product={\n            customername:ref.state.customername,\n            vendorname:ref.state.vendorname,\n            productname:ref.state.productname,\n            quantity:ref.state.quantity,\n            status:\"WAITING\"\n        }\n        axios.post('http://localhost:4000/add_order', Product)\n            .then(res => console.log(res.data));\n        const Pr={\n            username:ref.state.vendorname,\n            productname:ref.state.productname\n        }\n        let new_cnt=0;\n        let stat=\"Waiting\";\n        let flg1=1;\n        if(ref.state.quantity == 0)\n        {\n            alert(\"invalid input\\n\");\n            flg1=0;\n        }\n        if(flg1 == 1){\n        axios.post('http://localhost:4000/check1',Pr)\n            .then(response => {\n                \n                let quant=parseInt(response.data.quantity);\n                let cnt=response.data.count;\n                new_cnt=parseInt(cnt)+parseInt(ref.state.quantity);\n                let flg=1;\n                if(new_cnt > quant)\n                {\n                    alert(\"ordered quantity cannot exceed quantity remaining in the bundle\");\n                    flg=0;\n                }\n                else if(new_cnt == quant)\n                {\n                    \n                    stat=\"Ready\";\n                      \n\n                }\n                else\n                {\n                    \n                    stat=\"Waiting\";\n                }\n                if(flg==1)\n                {\n                    const Pr2={\n                        username:ref.state.vendorname,\n                        productname:ref.state.productname,\n                        count:new_cnt,\n                        status:stat\n                    }\n                    axios.put('http://localhost:4000/update-product',Pr2)\n                        .then(response => console.log(\"\"));\n                        alert(\"Ordering done!\\n\");\n                }\n            });\n        }\n        \n    }\n    render() {\n        return (\n            <div>\n            <div className=\"container\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <div className=\"collapse navbar-collapse\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"navbar-item\">\n                <button type=\"button\" onClick={this.searchProducts}>\n                  Search Products\n                </button>\n              </li>\n              <li className=\"navbar-item\">\n                <button type=\"button\" onClick={this.listProducts}>\n                  List Products\n                </button>\n              </li>\n            </ul>\n          </div>\n        </nav>\n        <br/>\n      </div>\n            <div>\n\n                <form onSubmit={ref.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Quantity: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={ref.state.quantity}\n                               onChange={ref.onChangeQuantity}\n                               />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Order\" className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n            </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}