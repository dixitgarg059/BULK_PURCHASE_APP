{"ast":null,"code":"import _classCallCheck from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-edit-product.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nvar ref;\n\nvar ORDER_PRODUCT =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ORDER_PRODUCT, _Component);\n\n  function ORDER_PRODUCT(props) {\n    var _this;\n\n    _classCallCheck(this, ORDER_PRODUCT);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ORDER_PRODUCT).call(this, props));\n    ref = _assertThisInitialized(_assertThisInitialized(_this));\n    ref.state = {\n      customername: ref.props.location.customername,\n      vendorname: ref.props.location.vendorname,\n      productname: ref.props.location.productname,\n      prev_quantity: ref.props.location.vendorname,\n      new_quantity: 0\n    };\n    ref.onChangeQuantity = ref.onChangeQuantity.bind(ref);\n    return _this;\n  }\n\n  _createClass(ORDER_PRODUCT, [{\n    key: \"onChangeQuantity\",\n    value: function onChangeQuantity(event) {\n      // alert(ref);\n      ref.setState({\n        new_quantity: event.target.value\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var Product = {\n        customername: ref.state.customername,\n        vendorname: ref.state.vendorname,\n        productname: ref.state.productname,\n        new_quantity: ref.state.quantity,\n        status: \"WAITING\"\n      }; // alert(\"adding to database\");\n      // alert(ref.state.customername);\n\n      axios.post('http://localhost:4000/add_order', Product).then(function (res) {\n        return console.log(res.data);\n      }); //  .catch(function(error) {\n      // console.log(error);\n      // })\n      // // axios.put('http://localhost:4000/updateorder',Product)\n      // ref.setState({\n      //     quantity:0\n      // });\n\n      var Pr = {\n        username: ref.state.vendorname,\n        productname: ref.state.productname\n      };\n      var new_cnt = 0;\n      var stat = \"Waiting\";\n      axios.post('http://localhost:4000/check1', Pr).then(function (response) {\n        var quant = parseInt(response.data.quantity);\n        var cnt = response.data.count;\n        new_cnt = parseInt(cnt) + parseInt(ref.state.quantity); // alert(new_cnt);\n\n        if (new_cnt >= quant) {\n          // alert(\"in if \");\n          stat = \"Ready\"; // new_cnt=0;  \n        } else {\n          // alert(\"in else\");\n          stat = \"Waiting\";\n        } // this.setState({users: response.data.});\n\n\n        var Pr2 = {\n          username: ref.state.vendorname,\n          productname: ref.state.productname,\n          count: new_cnt,\n          status: stat\n        }; // alert(Pr2.status);\n        // alert(Pr2.count);\n\n        axios.put('http://localhost:4000/update-product', Pr2).then(function (response) {\n          return console.log(\"\");\n        }); // \n\n        alert(\"Ordering done!\\n\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: ref.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Quantity: \"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: ref.state.quantity,\n        onChange: ref.onChangeQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Order\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ORDER_PRODUCT;\n}(Component);\n\nexport { ORDER_PRODUCT as default };","map":{"version":3,"sources":["/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-edit-product.component.js"],"names":["React","Component","axios","ref","ORDER_PRODUCT","props","state","customername","location","vendorname","productname","prev_quantity","new_quantity","onChangeQuantity","bind","event","setState","target","value","e","preventDefault","Product","quantity","status","post","then","res","console","log","data","Pr","username","new_cnt","stat","response","quant","parseInt","cnt","count","Pr2","put","alert","onSubmit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nlet ref;\nexport default class ORDER_PRODUCT extends Component {\n    \n    constructor(props) {\n        super(props);\n        ref=this;\n        ref.state = {\n            customername:ref.props.location.customername,\n            vendorname:ref.props.location.vendorname,\n            productname:ref.props.location.productname,\n            prev_quantity:ref.props.location.vendorname,\n            new_quantity:0\n        };\n        ref.onChangeQuantity = ref.onChangeQuantity.bind(ref);\n\n    }\n    \n    onChangeQuantity(event) {\n        // alert(ref);\n        ref.setState({ new_quantity: event.target.value });\n    }\n    onSubmit(e) {\n        e.preventDefault();\n\n        const Product={\n            customername:ref.state.customername,\n            vendorname:ref.state.vendorname,\n            productname:ref.state.productname,\n            new_quantity:ref.state.quantity,\n            status:\"WAITING\"\n        }\n        // alert(\"adding to database\");\n        // alert(ref.state.customername);\n        axios.post('http://localhost:4000/add_order', Product)\n            .then(res => console.log(res.data));\n        //  .catch(function(error) {\n            // console.log(error);\n        // })\n        // // axios.put('http://localhost:4000/updateorder',Product)\n        // ref.setState({\n        //     quantity:0\n        // });\n        const Pr={\n            username:ref.state.vendorname,\n            productname:ref.state.productname\n        }\n        let new_cnt=0;\n        let stat=\"Waiting\";\n        axios.post('http://localhost:4000/check1',Pr)\n            .then(response => {\n                \n                let quant=parseInt(response.data.quantity);\n                let cnt=response.data.count;\n                new_cnt=parseInt(cnt)+parseInt(ref.state.quantity);\n                // alert(new_cnt);\n                if(new_cnt >= quant)\n                {\n                    // alert(\"in if \");\n                    stat=\"Ready\";\n                    // new_cnt=0;  \n\n                }\n                else\n                {\n                    // alert(\"in else\");\n                    stat=\"Waiting\";\n                }\n                \n                // this.setState({users: response.data.});\n\n                const Pr2={\n                    username:ref.state.vendorname,\n                    productname:ref.state.productname,\n                    count:new_cnt,\n                    status:stat\n                }\n                // alert(Pr2.status);\n                // alert(Pr2.count);\n        \n                axios.put('http://localhost:4000/update-product',Pr2)\n                    .then(response => console.log(\"\"));\n                            // \n                    alert(\"Ordering done!\\n\");\n            });\n        \n    }\n    render() {\n        return (\n            <div>\n                <form onSubmit={ref.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Quantity: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={ref.state.quantity}\n                               onChange={ref.onChangeQuantity}\n                               />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Order\" className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}