{"ast":null,"code":"import _classCallCheck from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-list-product.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nvar ref;\n\nvar LIST_PRODUCT =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LIST_PRODUCT, _Component);\n\n  function LIST_PRODUCT(props) {\n    var _this;\n\n    _classCallCheck(this, LIST_PRODUCT);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LIST_PRODUCT).call(this, props));\n\n    _this.Edit = function (ownername, productname) {\n      alert(\"You are Editing the Order\"); // this.props.history.push()\n      // alert(\"you are ordering\");\n      // alert(this.state.username);\n      // this.props.history.push({\n      //     pathname:'/login/customer/search-products/products/order',\n      //     customername:this.state.username,\n      //     vendorname:ownername,\n      //     productname:this.state.productname\n      //   });\n    };\n\n    _this.RateVendor = function (ownername, productname) {\n      alert(\"You are Editing the Order\"); // this.props.history.push()\n      // alert(\"you are ordering\");\n      // alert(this.state.username);\n      // this.props.history.push({\n      //     pathname:'/login/customer/search-products/products/order',\n      //     customername:this.state.username,\n      //     vendorname:ownername,\n      //     productname:this.state.productname\n      //   });\n    };\n\n    ref = _assertThisInitialized(_assertThisInitialized(_this));\n    ref.state = {\n      username: ref.props.location.username,\n      products: [],\n      all_products: []\n    };\n    return _this;\n  }\n\n  _createClass(LIST_PRODUCT, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      axios.get('http://localhost:4000/a1').then(function (response) {\n        ref.setState({\n          products: response.data\n        });\n        axios.get('http://localhost:4000/a').then(function (response) {\n          ref.setState({\n            all_products: response.data\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-striped\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Vendorname\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Productname\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Quantity Ordered\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Quantity left for the order to get placed\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, ref.state.products.map(function (currentProduct, i) {\n        // ref.state.all_products.map((it,i) =>{\n        if (currentProduct.customername === ref.state.username) if (ref.getStatus(currentProduct.productname, currentProduct.vendorname) === \"Waiting\") {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, currentProduct.vendorname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, currentProduct.productname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, currentProduct.quantity), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, \"Waiting\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, ref.getQuantity(currentProduct.productname, currentProduct.vendorname)), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.Edit(currentProduct.username, currentProduct.productname);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, \"Edit\"));\n        } else if (ref.getStatus(currentProduct.productname, currentProduct.vendorname) === \"Placed\") {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, currentProduct.vendorname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, currentProduct.productname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, currentProduct.quantity), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, \"Waiting\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, ref.getQuantity(currentProduct.productname, currentProduct.vendorname)), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.RateVendor(currentProduct.username, currentProduct.productname);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, \"RateVendor\"));\n        } else {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, currentProduct.vendorname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, currentProduct.productname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, currentProduct.quantity), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, ref.getStatus(currentProduct.productname, currentProduct.vendorname)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, \"0\"));\n        } // })\n      }))));\n    }\n  }, {\n    key: \"getStatus\",\n    value: function getStatus(productname, vendorname) {\n      var st = \"Waiting\";\n\n      for (var i = 0; i < ref.state.all_products.length; i++) {\n        if (ref.state.all_products[i].productname === productname && ref.state.all_products[i].username === vendorname) st = ref.state.all_products[i].status;\n      }\n\n      if (st === \"Ready\") st = \"Placed\";\n      return st;\n    }\n  }, {\n    key: \"getQuantity\",\n    value: function getQuantity(productname, vendorname) {\n      var st = 0;\n\n      for (var i = 0; i < ref.state.all_products.length; i++) {\n        if (ref.state.all_products[i].productname === productname && ref.state.all_products[i].username === vendorname) {\n          st = parseInt(ref.state.all_products[i].quantity) - parseInt(ref.state.all_products[i].count);\n          break;\n        }\n      }\n\n      return st;\n    }\n  }]);\n\n  return LIST_PRODUCT;\n}(Component);\n\nexport { LIST_PRODUCT as default };","map":{"version":3,"sources":["/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-list-product.component.js"],"names":["React","Component","axios","ref","LIST_PRODUCT","props","Edit","ownername","productname","alert","RateVendor","state","username","location","products","all_products","get","then","response","setState","data","catch","error","console","log","map","currentProduct","i","customername","getStatus","vendorname","quantity","getQuantity","st","length","status","parseInt","count"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nlet ref;\nexport default class LIST_PRODUCT extends Component {\n    \n    constructor(props) {\n        super(props);\n        ref=this;\n        ref.state = {\n            username:ref.props.location.username,\n            products: [],\n            all_products:[]\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/a1')\n             .then(response => {\n                ref.setState({products: response.data});\n                axios.get('http://localhost:4000/a')\n                    .then(response => {\n                    ref.setState({all_products: response.data});\n                })\n                    .catch(function(error) {\n                    console.log(error);\n             })\n        \n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n        \n\n    }\n    Edit=(ownername,productname) =>{\n        alert(\"You are Editing the Order\");\n        // this.props.history.push()\n        // alert(\"you are ordering\");\n        // alert(this.state.username);\n        // this.props.history.push({\n        //     pathname:'/login/customer/search-products/products/order',\n        //     customername:this.state.username,\n        //     vendorname:ownername,\n        //     productname:this.state.productname\n        //   });\n    }\n    RateVendor=(ownername,productname) =>{\n        alert(\"You are Editing the Order\");\n        // this.props.history.push()\n        // alert(\"you are ordering\");\n        // alert(this.state.username);\n        // this.props.history.push({\n        //     pathname:'/login/customer/search-products/products/order',\n        //     customername:this.state.username,\n        //     vendorname:ownername,\n        //     productname:this.state.productname\n        //   });\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"table table-striped\">\n                    <thead>\n                   \n                    <tr>\n                        <th>Vendorname</th>\n                        <th>Productname</th>\n                        <th>Quantity Ordered</th>\n                        <th>Status</th>\n                        <th>Quantity left for the order to get placed</th>\n                        {/* <th>Customername</th>  */}\n\n                    </tr>          \n                    </thead>\n                    <tbody>\n                    { \n                        ref.state.products.map((currentProduct, i) => {\n                            // ref.state.all_products.map((it,i) =>{\n                            if(currentProduct.customername ===   ref.state.username)\n                            if(ref.getStatus(currentProduct.productname,currentProduct.vendorname) === \"Waiting\")\n                            {\n\n                                return (\n                                    <tr>\n                                        <td>{currentProduct.vendorname}</td>\n                                        <td>{currentProduct.productname}</td>\n                                        <td>{currentProduct.quantity}</td>\n                                        <td>Waiting</td>  \n                                        {/* <td>{currentProduct.customername}</td> */}\n                                        <td>{ref.getQuantity(currentProduct.productname,currentProduct.vendorname)}</td>\n                                        <button type=\"button\" onClick={() => this.Edit(currentProduct.username,currentProduct.productname)}>Edit</button>\n\n\n                                    </tr>\n                                )\n\n\n                            }\n                            else if(ref.getStatus(currentProduct.productname,currentProduct.vendorname) === \"Placed\")\n                            {\n\n                                return (\n                                    <tr>\n                                        <td>{currentProduct.vendorname}</td>\n                                        <td>{currentProduct.productname}</td>\n                                        <td>{currentProduct.quantity}</td>\n                                        <td>Waiting</td>  \n                                        {/* <td>{currentProduct.customername}</td> */}\n                                        <td>{ref.getQuantity(currentProduct.productname,currentProduct.vendorname)}</td>\n                                        <button type=\"button\" onClick={() => this.RateVendor(currentProduct.username,currentProduct.productname)}>RateVendor</button>\n\n\n                                    </tr>\n                                )\n\n\n                            }\n                            else\n                            {\n\n                                return (\n                                    <tr>\n                                        <td>{currentProduct.vendorname}</td>\n                                        <td>{currentProduct.productname}</td>\n                                        <td>{currentProduct.quantity}</td>\n                                        <td>{ref.getStatus(currentProduct.productname,currentProduct.vendorname)}</td>  \n                                        {/* <td>{currentProduct.customername}</td> */}\n                                        <td>0</td>\n                                    </tr>\n                                )\n\n\n\n                            }\n                            \n                            // })\n                        })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n    getStatus(productname,vendorname)\n    {\n        let st=\"Waiting\";\n        for(var i=0;i<ref.state.all_products.length;i++)\n            {\n                if(ref.state.all_products[i].productname === productname && ref.state.all_products[i].username === vendorname)\n                    st=ref.state.all_products[i].status;\n            }\n        if(st === \"Ready\")\n            st=\"Placed\";\n        return st;\n    }\n    getQuantity(productname,vendorname)\n    {\n        let st=0;\n        for(var i=0;i<ref.state.all_products.length;i++)\n            {\n                if(ref.state.all_products[i].productname === productname && ref.state.all_products[i].username === vendorname)\n                {\n                    st=parseInt(ref.state.all_products[i].quantity)  - parseInt(ref.state.all_products[i].count);\n                    break;\n                }\n            }\n        return st;\n    }\n}"]},"metadata":{},"sourceType":"module"}