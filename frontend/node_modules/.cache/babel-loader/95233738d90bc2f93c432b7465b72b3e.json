{"ast":null,"code":"import _classCallCheck from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-list-product.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nvar ref;\n\nvar LIST_PRODUCT =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LIST_PRODUCT, _Component);\n\n  function LIST_PRODUCT(props) {\n    var _this;\n\n    _classCallCheck(this, LIST_PRODUCT);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LIST_PRODUCT).call(this, props));\n\n    _this.Edit = function (ownername, productname) {\n      alert(\"You are Editing the Order\"); // this.props.history.push()\n      // alert(\"you are ordering\");\n      // alert(this.state.username);\n\n      _this.props.history.push({\n        pathname: '/login/customer/search-products/products/order',\n        customername: _this.state.username,\n        vendorname: ownername,\n        productname: _this.state.productname\n      });\n    };\n\n    ref = _assertThisInitialized(_assertThisInitialized(_this));\n    ref.state = {\n      username: ref.props.location.username,\n      products: [],\n      all_products: []\n    };\n    return _this;\n  }\n\n  _createClass(LIST_PRODUCT, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      axios.get('http://localhost:4000/a1').then(function (response) {\n        ref.setState({\n          products: response.data\n        });\n        axios.get('http://localhost:4000/a').then(function (response) {\n          ref.setState({\n            all_products: response.data\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-striped\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Vendorname\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Productname\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Quantity\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Customername\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, ref.state.products.map(function (currentProduct, i) {\n        // ref.state.all_products.map((it,i) =>{\n        // if(currentProduct.customername ===   ref.state.username  && currentProduct.vendorname === it.username && currentProduct.productname === it.productname)\n        if (ref.getStatus(currentProduct.productname, currentProduct.vendorname) === \"Waiting\") {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, currentProduct.vendorname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, currentProduct.productname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, currentProduct.quantity), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, \"\\\"Waiting\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, currentProduct.customername), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.Edit(currentProduct.username, currentProduct.productname);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, \"Edit\"));\n        } else {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, currentProduct.vendorname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, currentProduct.productname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, currentProduct.quantity), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, ref.getStatus(currentProduct.productname, currentProduct.vendorname)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, currentProduct.customername));\n        } // })\n\n      }))));\n    }\n  }, {\n    key: \"getStatus\",\n    value: function getStatus(productname, vendorname) {\n      var st = \"Waiting\";\n\n      for (var i = 0; i < ref.state.all_products.length; i++) {\n        if (ref.state.all_products[i].productname === productname && ref.state.all_products[i].username === vendorname) st = ref.state.all_products[i].status;\n      }\n\n      if (st === \"Ready\") st = \"Placed\";\n      return st;\n    }\n  }]);\n\n  return LIST_PRODUCT;\n}(Component);\n\nexport { LIST_PRODUCT as default };","map":{"version":3,"sources":["/home/dixit/Desktop/DASS-ASSIGNMENT2/Webapp/frontend/src/components/customer-list-product.component.js"],"names":["React","Component","axios","ref","LIST_PRODUCT","props","Edit","ownername","productname","alert","history","push","pathname","customername","state","username","vendorname","location","products","all_products","get","then","response","setState","data","catch","error","console","log","map","currentProduct","i","getStatus","quantity","st","length","status"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nlet ref;\nexport default class LIST_PRODUCT extends Component {\n    \n    constructor(props) {\n        super(props);\n        ref=this;\n        ref.state = {\n            username:ref.props.location.username,\n            products: [],\n            all_products:[]\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/a1')\n             .then(response => {\n                ref.setState({products: response.data});\n                axios.get('http://localhost:4000/a')\n                    .then(response => {\n                    ref.setState({all_products: response.data});\n                })\n                    .catch(function(error) {\n                    console.log(error);\n             })\n        \n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n        \n\n    }\n    Edit=(ownername,productname) =>{\n        alert(\"You are Editing the Order\");\n        // this.props.history.push()\n        // alert(\"you are ordering\");\n        // alert(this.state.username);\n        this.props.history.push({\n            pathname:'/login/customer/search-products/products/order',\n            customername:this.state.username,\n            vendorname:ownername,\n            productname:this.state.productname\n          });\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Vendorname</th>\n                            <th>Productname</th>\n                            <th>Quantity</th>\n                            <th>Status</th>\n                            <th>Customername</th> \n\n                        </tr>\n                    </thead>\n                    <tbody>\n                    { \n                        ref.state.products.map((currentProduct, i) => {\n                            // ref.state.all_products.map((it,i) =>{\n                            // if(currentProduct.customername ===   ref.state.username  && currentProduct.vendorname === it.username && currentProduct.productname === it.productname)\n                            if(ref.getStatus(currentProduct.productname,currentProduct.vendorname) === \"Waiting\")\n                            {\n\n                                return (\n                                    <tr>\n                                        <td>{currentProduct.vendorname}</td>\n                                        <td>{currentProduct.productname}</td>\n                                        <td>{currentProduct.quantity}</td>\n                                        <td>\"Waiting</td>  \n                                        <td>{currentProduct.customername}</td>\n                                        <button type=\"button\" onClick={() => this.Edit(currentProduct.username,currentProduct.productname)}>Edit</button>\n\n                                    </tr>\n                                )\n\n\n                            }\n                            else\n                            {\n\n                                return (\n                                    <tr>\n                                        <td>{currentProduct.vendorname}</td>\n                                        <td>{currentProduct.productname}</td>\n                                        <td>{currentProduct.quantity}</td>\n                                        <td>{ref.getStatus(currentProduct.productname,currentProduct.vendorname)}</td>  \n                                        <td>{currentProduct.customername}</td>\n                                    </tr>\n                                )\n\n\n\n                            }\n                            \n                            // })\n                        })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n    getStatus(productname,vendorname)\n    {\n        let st=\"Waiting\";\n        for(var i=0;i<ref.state.all_products.length;i++)\n            {\n                if(ref.state.all_products[i].productname === productname && ref.state.all_products[i].username === vendorname)\n                    st=ref.state.all_products[i].status;\n            }\n        if(st === \"Ready\")\n            st=\"Placed\";\n        return st;\n    }\n}"]},"metadata":{},"sourceType":"module"}